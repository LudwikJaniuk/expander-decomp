time -o output/complete1000-h-0.03162277660168379-g-0.55-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/complete1000.graph  -r 0 -s --H_phi=0.03162277660168379 --G_phi=0.55 --vol 0.1 -o output/complete1000-h-0.03162277660168379-g-0.55-t-30m.ptn >> output/complete1000-h-0.03162277660168379-g-0.55-t-30m.outReading graph from graphs/complete1000.graph
Reading a graph with V 1000E 499500
499500
1000
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 249750 (1.12704 s)
Flow search took (seconds) 1.15692
SUBG cut conductance: 999
SUBG cut minside volume 0
SUBG cut maxside volume 999000
== End round 0 ==
H expansion: 0.250138, num cross: 62472
H conductance: 0.250138, num cross: 62472
H_single expansion: 0.250138, num cross: 62472
H_single conductance: 0.250138, num cross: 62472
Cap 1 ... flow: 249750 (1.23151 s)
Flow search took (seconds) 1.26075
SUBG cut conductance: 999
SUBG cut minside volume 0
SUBG cut maxside volume 999000
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 999
R1 cond 999
The best with best expansion was found on round0
final_Edge crossings (E) : 0
final_cut size: ( 0 | 1000 )
diff: 1000 (factor 1 of total n vertices)
final_cut volumes: ( 0 | 999000 )
final_expansion: 0
final_conductance: 999
CASE1 NO Goodenough cut, G certified expander.

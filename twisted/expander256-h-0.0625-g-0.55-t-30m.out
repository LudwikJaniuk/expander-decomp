time -o output/expander256-h-0.0625-g-0.55-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/expander256.graph  -r 0 -s --H_phi=0.0625 --G_phi=0.55 --vol 0.1 -o output/expander256-h-0.0625-g-0.55-t-30m.ptn >> output/expander256-h-0.0625-g-0.55-t-30m.outReading graph from graphs/expander256.graph
Reading a graph with V 256E 1024
1024
256
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 512 (0.000901 s)
Flow search took (seconds) 0.000961
SUBG cut conductance: 999
SUBG cut minside volume 0
SUBG cut maxside volume 1984
== End round 0 ==
H expansion: 0.273438, num cross: 140
H conductance: 0.273438, num cross: 140
H_single expansion: 0.273438, num cross: 140
H_single conductance: 0.273438, num cross: 140
Cap 1 ... flow: 509 (0.002322 s)
Cap 2 ... flow: 512 (0.000721 s)
Flow search took (seconds) 0.003234
SUBG cut conductance: 0.635294
SUBG cut minside volume 85
SUBG cut maxside volume 1899
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 999
R1 cond 0.635294
The best with best expansion was found on round1
final_Edge crossings (E) : 54
final_cut size: ( 244 | 12 )
diff: 232 (factor 0.90625 of total n vertices)
final_cut volumes: ( 1899 | 85 )
final_expansion: 4.5
final_conductance: 0.635294
CASE1 NO Goodenough cut, G certified expander.

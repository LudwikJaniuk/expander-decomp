time -o out_log2/fe_4elt2-h-0.1-g-0.011516002660902185-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/fe_4elt2.graph --ignore-multi -r 0 -s --H_phi=0.1 --G_phi=0.011516002660902185 --vol 0.1 -o out_log2/fe_4elt2-h-0.1-g-0.011516002660902185-t-30m.ptn >> out_log2/fe_4elt2-h-0.1-g-0.011516002660902185-t-30m.outReading graph from graphs/fe_4elt2.graph
Reading a graph with V 11143E 32818
32818
11143
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 15393 (0.35394 s)
Cap 2 ... flow: 16397 (0.800768 s)
Cap 4 ... flow: 16409 (0.458418 s)
Flow search took (seconds) 1.61718
SUBG cut conductance: 0.0235519
SUBG cut minside volume 4713
SUBG cut maxside volume 60923
== End round 0 ==
H expansion: 0.249314, num cross: 4091
H conductance: 0.249314, num cross: 4091
H_single expansion: 0.249314, num cross: 4091
H_single conductance: 0.249314, num cross: 4091
Cap 1 ... flow: 14924 (0.431126 s)
Cap 2 ... flow: 16388 (0.486284 s)
Cap 4 ... flow: 16409 (0.286295 s)
Flow search took (seconds) 1.21326
SUBG cut conductance: 0.0347537
SUBG cut minside volume 3309
SUBG cut maxside volume 62327
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 0.0235519
R1 cond 0.0347537
The best with best expansion was found on round0
final_Edge crossings (E) : 111
final_cut size: ( 808 | 10335 )
diff: 9527 (factor 0.854976 of total n vertices)
final_cut volumes: ( 4713 | 60923 )
final_expansion: 0.137376
final_conductance: 0.0235519
CASE1 NO Goodenough cut, G certified expander.

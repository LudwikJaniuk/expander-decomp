time -o output/expander16-h-0.1-g-0.25-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/expander16.graph  -r 0 -s --H_phi=0.1 --G_phi=0.25 --vol 0.1 -o output/expander16-h-0.1-g-0.25-t-30m.ptn >> output/expander16-h-0.1-g-0.25-t-30m.outReading graph from graphs/expander16.graph
Reading a graph with V 16E 64
64
16
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 31 (6.6e-05 s)
Cap 2 ... flow: 32 (4.7e-05 s)
Flow search took (seconds) 0.000145
SUBG cut conductance: 0.538462
SUBG cut minside volume 26
SUBG cut maxside volume 86
== End round 0 ==
H expansion: 0.1875, num cross: 6
H conductance: 0.1875, num cross: 6
H_single expansion: 0.1875, num cross: 6
H_single conductance: 0.1875, num cross: 6
Cap 1 ... flow: 32 (4e-05 s)
Flow search took (seconds) 4.9e-05
SUBG cut conductance: 999
SUBG cut minside volume 0
SUBG cut maxside volume 112
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 0.538462
R1 cond 999
The best with best expansion was found on round0
final_Edge crossings (E) : 14
final_cut size: ( 12 | 4 )
diff: 8 (factor 0.5 of total n vertices)
final_cut volumes: ( 86 | 26 )
final_expansion: 3.5
final_conductance: 0.538462
CASE1 NO Goodenough cut, G certified expander.

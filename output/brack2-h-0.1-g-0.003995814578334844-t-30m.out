time -o output/brack2-h-0.1-g-0.003995814578334844-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/brack2.graph --ignore-multi -r 0 -s --H_phi=0.1 --G_phi=0.003995814578334844 --vol 0.1 -o output/brack2-h-0.1-g-0.003995814578334844-t-30m.ptn >> output/brack2-h-0.1-g-0.003995814578334844-t-30m.outReading graph from graphs/brack2.graph
Reading a graph with V 62631E 366559
366559
62631
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 183183 (11.6645 s)
Cap 2 ... flow: 183279 (5.26552 s)
Flow search took (seconds) 17.0229
SUBG cut conductance: 0.0164756
SUBG cut minside volume 237745
SUBG cut maxside volume 495373
== End round 0 ==
H expansion: 0.250471, num cross: 45906
H conductance: 0.250472, num cross: 45906
H_single expansion: 0.250471, num cross: 45906
H_single conductance: 0.250472, num cross: 45906
Cap 1 ... flow: 182661 (14.743 s)
Cap 2 ... flow: 183279 (9.92332 s)
Flow search took (seconds) 24.765
SUBG cut conductance: 0.0583626
SUBG cut minside volume 156213
SUBG cut maxside volume 576905
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 0.0164756
R1 cond 0.0583626
The best with best expansion was found on round0
final_Edge crossings (E) : 3917
final_cut size: ( 41963 | 20668 )
diff: 21295 (factor 0.340007 of total n vertices)
final_cut volumes: ( 495373 | 237745 )
final_expansion: 0.18952
final_conductance: 0.0164756
CASE1 NO Goodenough cut, G certified expander.

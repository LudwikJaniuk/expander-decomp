time -o final/expander4-hphi-0.1.out.time timeout 15m cmake-build-debug/a.out -f graphs/expander4.graph -r 0 -s --H_phi=0.1 --G_phi=0.25 --vol 0.1 -o final/expander4-hphi-0.1.ptn >> final/expander4-hphi-0.1.outReading graph from graphs/expander4.graph
Reading a graph with V 4E 16
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 3 (7e-06 s)
Cap 2 ... flow: 4 (5e-06 s)
Flow search took (seconds) 2.7e-05
SUBG cut conductance: 0.333333
SUBG cut minside volume 6
SUBG cut maxside volume 10
== End round 0 ==
H expansion: 0.5, num cross: 2
H conductance: 0.5, num cross: 2
H_single expansion: 0.5, num cross: 2
H_single conductance: 0.5, num cross: 2
Cap 1 ... flow: 3 (3e-06 s)
Cap 2 ... flow: 4 (4e-06 s)
Flow search took (seconds) 1.9e-05
SUBG cut conductance: 0.666667
SUBG cut minside volume 3
SUBG cut maxside volume 13
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 0.333333
R1 cond 0.666667
The best with best expansion was found on round0
Edge crossings (E) : 2
cut size: (2 | 2)
diff: 0 (0 of total n vertices)
Min side: 2
expansion: 1
conductance: 1
cut volume: 6
noncut volume: 10
CASE1 NO Goodenough cut, G certified expander.

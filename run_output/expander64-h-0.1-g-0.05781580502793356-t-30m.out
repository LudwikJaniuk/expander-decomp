time -o run_output/expander64-h-0.1-g-0.05781580502793356-t-30m.out.time timeout 30m cmake-build-debug/a.out -f graphs/expander64.graph  -r 30 -s --H_phi=0.1 --G_phi=0.05781580502793356 --vol 0.1 -o run_output/expander64-h-0.1-g-0.05781580502793356-t-30m.ptn >> run_output/expander64-h-0.1-g-0.05781580502793356-t-30m.outReading graph from graphs/expander64.graph
Reading a graph with V 64E 256
256
64
H expansion: 0, num cross: 0
H conductance: -nan, num cross: 0
H_single expansion: 0, num cross: 0
H_single conductance: -nan, num cross: 0
Cap 1 ... flow: 127 (0.000449 s)
Cap 2 ... flow: 128 (0.000322 s)
Flow search took (seconds) 0.000859
SUBG cut conductance: 0.857143
SUBG cut minside volume 7
SUBG cut maxside volume 473
== End round 0 ==
H expansion: 0.25, num cross: 32
H conductance: 0.25, num cross: 32
H_single expansion: 0.25, num cross: 32
H_single conductance: 0.25, num cross: 32
Cap 1 ... flow: 126 (0.000457 s)
Cap 2 ... flow: 128 (0.000259 s)
Flow search took (seconds) 0.000832
SUBG cut conductance: 0.588235
SUBG cut minside volume 34
SUBG cut maxside volume 446
== End round 1 ==
H Conductance target reached, this will be case 1 or 3. According to theory, this means we probably won't find a better cut. That is, assuming you set H_phi right. If was used together with G_phi target, this also certifies the input graph is a G_phi expander unless there was a very unbaanced cut somewhere, which we will proceed to look for.
R0 cond 0.857143
R1 cond 0.588235
The best with best expansion was found on round1
final_Edge crossings (E) : 20
final_cut size: ( 59 | 5 )
diff: 54 (factor 0.84375 of total n vertices)
final_cut volumes: ( 446 | 34 )
final_expansion: 4
final_conductance: 0.588235
CASE1 NO Goodenough cut, G certified expander.
